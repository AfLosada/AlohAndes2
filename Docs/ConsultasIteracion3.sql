 
 /*------------------------------------RFC10 Consultar consumo en Alohandes----------------------*/
 
  /*Versión administrador*/
   
  SELECT *
  FROM (SELECT ID_HOTEL, ID_HOSTAL, ID_PERSONA, ID_VIVIENDAU, ID_CLIENTE, ID_OFERTA, FECHA, VALOR, DURACION, ID_RESERVA
        FROM ((SELECT ID_OFERTA, ID_HOTEL
        FROM OFERTA
        WHERE ID_OFERTA = &IDENTIFICADOR_OFERTA)
        NATURAL JOIN RESERVA)
        NATURAL JOIN RESERVAS_CLIENTES)
  WHERE (TO_NUMBER(SUBSTR(FECHA,1, 2)) > &DIA_INICIAL 
       AND TO_NUMBER(SUBSTR(FECHA,1, 2)) < &DIA_FINAL 
       AND TO_NUMBER(SUBSTR(FECHA,4, 2)) >= &MES_INICIAL 
       AND TO_NUMBER(SUBSTR(FECHA,4, 2)) < &MES_FINAL  
       AND TO_NUMBER(SUBSTR(FECHA,7, 4)) = 2018)
ORDER BY &CRITERIO;
 COMMIT;
 /*ID_OFERTA = 82; DIA_INICIAL = 01; DIA_FINAL = 15; MES_INICIAL: 01; MES_FINAL = 04; CRITERIO = DURACION*/
 
 

  /*Versión cliente especifico */
  
 SELECT *
 FROM (SELECT ID_HOTEL, ID_HOSTAL, ID_PERSONA, ID_VIVIENDAU, ID_CLIENTE, ID_OFERTA, FECHA, VALOR, DURACION, ID_RESERVA
  FROM (SELECT *
        FROM ((SELECT ID_OFERTA, ID_HOTEL
        FROM OFERTA
        WHERE ID_OFERTA = &IDENTIFICADOR_OFERTA)
        NATURAL JOIN RESERVA)
        NATURAL JOIN RESERVAS_CLIENTES)
  WHERE (TO_NUMBER(SUBSTR(FECHA,1, 2)) > &DIA_INICIAL 
       AND TO_NUMBER(SUBSTR(FECHA,1, 2)) < &DIA_FINAL 
       AND TO_NUMBER(SUBSTR(FECHA,4, 2)) >= &MES_INICIAL 
       AND TO_NUMBER(SUBSTR(FECHA,4, 2)) < &MES_FINAL  
       AND TO_NUMBER(SUBSTR(FECHA,7, 4)) = 2018))
 WHERE ID_CLIENTE = &ID_CLIENTE
 ORDER BY &CRITERIO;
 COMMIT;
/*ID_OFERTA = 82; DIA_INICIAL = 01; DIA_FINAL = 15; MES_INICIAL: 01; MES_FINAL = 04: ID_CLIENTE = 6*/

/*Indices agregados a la tabla*/

CREATE INDEX RESERVA_HOTEL_INDEX ON RESERVA(ID_RESERVA, ID_HOTEL);
DROP INDEX RESERVA_HOTEL_INDEX;

 /*Justificación de los indices utilizados para la consulta anterior*/

 
 /*-------------------------------------RFC11 Consultar consumo en Alohandes V2-------------------*/
  
  /*Versión Administrador*/
  SELECT *
  FROM CLIENTE
  WHERE ID_CLIENTE 
  NOT IN(SELECT ID_CLIENTE
         FROM RESERVAS_CLIENTES
         NATURAL JOIN RESERVA
         WHERE (TO_NUMBER(SUBSTR(FECHA,1, 2)) > &DIA_INICIAL 
                AND TO_NUMBER(SUBSTR(FECHA,1, 2)) < &DIA_FINAL 
                AND TO_NUMBER(SUBSTR(FECHA,4, 2)) >= &MES_INICIAL 
                AND TO_NUMBER(SUBSTR(FECHA,4, 2)) < &MES_FINAL  
                AND TO_NUMBER(SUBSTR(FECHA,7, 4)) = 2018));
 COMMIT;
  
  /*Versión Cliente Especifico*/
  
  SELECT *
  FROM CLIENTE
  WHERE ID_CLIENTE 
  NOT IN(SELECT ID_CLIENTE
         FROM RESERVAS_CLIENTES
         NATURAL JOIN RESERVA
         WHERE (TO_NUMBER(SUBSTR(FECHA,1, 2)) > &DIA_INICIAL 
            AND TO_NUMBER(SUBSTR(FECHA,1, 2)) < &DIA_FINAL 
            AND TO_NUMBER(SUBSTR(FECHA,4, 2)) >= &MES_INICIAL 
            AND TO_NUMBER(SUBSTR(FEcCHA,4, 2)) < &MES_FINAL  
            AND TO_NUMBER(SUBSTR(FECHA,7, 4)) = 2018))
            AND ID_CLIENTE = &ID_CLIENTE;
 COMMIT;
  /*Indices agregados a la tabla*/
  
    
   /*Justificación de los indices utilizados para la consulta anterior*/
  
  /*------------------------------------RFC12 Consultar Funcionamiento----------------------------*/
  
  /*Consulta base para el requerimiento*/
  
   SELECT ofi.ID_OFERTA,ofi.ID_HOSTAL, ofi.ID_HOTEL, ofi.ID_PERSONA, ofi.ID_VIVIENDAU, SEMANA, FECHA, ID_RESERVA, NUM_RESERVAS
   FROM (OFERTA ofi INNER JOIN (SELECT *
   FROM (SELECT ID_RESERVA, TO_NUMBER(TO_CHAR(TO_DATE(FECHAS_DAT,'DD/MM/YYYY'),'IW')) SEMANA, FECHA, ID_HOSTAL, ID_HOTEL, ID_VIVIENDAU, ID_PERSONA
   FROM (SELECT ID_RESERVA,TO_DATE(FECHA,'DD-MM-YYYY') FECHAS_DAT, CONFIRMADA, ID_HOTEL, ID_VIVIENDAU, ID_PERSONA, ID_HOSTAL,FECHA
   FROM RESERVA)))t1
   ON (ofi.ID_HOSTAL = t1.ID_HOSTAL OR ofi.ID_HOSTAL is Null AND t1.id_HOSTAL is Null) AND
      (ofi.ID_HOTEL = t1.ID_HOTEL OR ofi.ID_HOTEL is Null AND t1.id_HOTEL is Null) AND
      (ofi.ID_VIVIENDAU = t1.ID_VIVIENDAU OR ofi.ID_VIVIENDAU is Null AND t1.id_VIVIENDAU is Null) AND
      (ofi.ID_PERSONA = t1.ID_PERSONA OR ofi.ID_PERSONA is Null AND t1.id_PERSONA IS NULL))
   ORDER BY SEMANA;
   COMMIT;

   SELECT ofi.ID_OFERTA, COUNT(SEMANA) AS SEM
   FROM (OFERTA ofi INNER JOIN (SELECT *
   FROM (SELECT ID_RESERVA, TO_NUMBER(TO_CHAR(TO_DATE(FECHAS_DAT,'DD/MM/YYYY'),'IW')) SEMANA, FECHA, ID_HOSTAL, ID_HOTEL, ID_VIVIENDAU, ID_PERSONA
   FROM (SELECT ID_RESERVA,TO_DATE(FECHA,'DD-MM-YYYY') FECHAS_DAT, CONFIRMADA, ID_HOTEL, ID_VIVIENDAU, ID_PERSONA, ID_HOSTAL,FECHA
   FROM RESERVA)))t1
   ON (ofi.ID_HOSTAL = t1.ID_HOSTAL OR ofi.ID_HOSTAL is Null AND t1.id_HOSTAL is Null) AND
      (ofi.ID_HOTEL = t1.ID_HOTEL OR ofi.ID_HOTEL is Null AND t1.id_HOTEL is Null) AND
      (ofi.ID_VIVIENDAU = t1.ID_VIVIENDAU OR ofi.ID_VIVIENDAU is Null AND t1.id_VIVIENDAU is Null) AND
      (ofi.ID_PERSONA = t1.ID_PERSONA OR ofi.ID_PERSONA is Null AND t1.id_PERSONA IS NULL))
   GROUP BY SEM;

  
  /*-----------------------------------RFC13 Consultar Los Buenos Clientes----------------------*/

    /*Buenos clientes con reservas una vez al mes*/
    
    SELECT *
    FROM CLIENTE NATURAL JOIN(SELECT ID_CLIENTE
    FROM RESERVAS_CLIENTES NATURAL JOIN (SELECT ID_RESERVA
    FROM RESERVA
    WHERE (TO_NUMBER(SUBSTR(FECHA,4, 2))) = &MES));
    COMMIT;
    
    
    /*Indices agregados a la tabla*/
    
    
    /*Buenos clientes con reservas en alojamientos costosos*/
    /*El precio es el costo por habitacion(depende del alojamiento) mientras que el valor es el costo total de la reserva */
    /*NOTA: Se entenderá como costosa la habitación que supere los 40,000 COP por noche*/
    SELECT *
    FROM CLIENTE 
    NATURAL JOIN (SELECT ID_CLIENTE
                  FROM RESERVAS_CLIENTES 
                  NATURAL JOIN (SELECT res.ID_RESERVA
                  FROM (RESERVA res INNER JOIN HABITACION hab
                  ON res.ID_RESERVA = hab.ID_RESERVA)
                  WHERE PRECIO > 40000));
    COMMIT;
     /*Indices agregados a la tabla*/
    
    
     /*Buenos clientes con reservas en Suites*/
    SELECT * 
    FROM CLIENTE NATURAL JOIN
        (SELECT ID_CLIENTE
        FROM RESERVAS_CLIENTES 
        NATURAL JOIN(SELECT res.ID_RESERVA
                     FROM (RESERVA res 
                     INNER JOIN HABITACION hab
                     ON res.ID_RESERVA = hab.ID_RESERVA) 
                     WHERE TIPO = 'SUITE'));
    COMMIT;
     /*Indices agregados a la tabla*/
        
     /*Justificación de los indices utilizados para la consulta anterior*/
     
     

    /*----------------------Posible solución desde SQL para el requerimiento 12-------------------*/
   
   SELECT SEMANA, MAX(ID_OFERTA) AS ValorMaximo
   FROM (OFERTA ofi INNER JOIN (SELECT *
   FROM (SELECT ID_RESERVA, TO_NUMBER(TO_CHAR(TO_DATE(FECHAS_DAT,'DD/MM/YYYY'),'IW')) SEMANA, FECHA,ID_HOSTAL, ID_HOTEL, ID_VIVIENDAU, ID_PERSONA
   FROM (SELECT ID_RESERVA,TO_DATE(FECHA,'DD-MM-YYYY') FECHAS_DAT, CONFIRMADA, ID_HOTEL, ID_VIVIENDAU, ID_PERSONA, ID_HOSTAL,FECHA
   FROM RESERVA)))t1
   ON (ofi.ID_HOSTAL = t1.ID_HOSTAL OR ofi.ID_HOSTAL is Null AND t1.id_HOSTAL is Null) AND
      (ofi.ID_HOTEL = t1.ID_HOTEL OR ofi.ID_HOTEL is Null AND t1.id_HOTEL is Null) AND
      (ofi.ID_VIVIENDAU = t1.ID_VIVIENDAU OR ofi.ID_VIVIENDAU is Null AND t1.id_VIVIENDAU is Null) AND
      (ofi.ID_PERSONA = t1.ID_PERSONA OR ofi.ID_PERSONA is Null AND t1.id_PERSONA IS NULL)) t2
       INNER JOIN (SELECT 
                    SEMANA, MAX(ID_OFERTA) AS ValorMaximo
                   FROM t2
                   GROUP BY SEMANA) con
                   on con.SEMANA = t2.SEMANA AND con.ValorMaximo = t2.ValorMaximo;
   COMMIT;
    
     


/*----------------------Poblacion de tablas de Servicios Inmobiliarios  y Publicos-------------------*/

insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (41, 'GIMNASIO', 100000);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (42, 'SALA ESTUDIO', 0);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (43, 'LAVANDERIA', 40000);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (44, 'COMEDOR', 0);

insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (45, 'SALA JUEGOS', 0);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (46, 'BUFFET', 30000);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (47, 'SALA TELEVISION', 10000);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (48, 'SALA PROYECCION', 50000);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (49, 'SALA REUNIONES', 20000);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (50, 'JACUZZI', 45000);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (51, 'TURCO', 0);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (52, 'SAUNA', 0);

insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (53, 'TERRAZA', 0);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (54, 'BALCON', 0);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (55, 'ZONA FUMADORES', 0);

insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (56, 'PARQUE INFANTIL', 0);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (57, 'TEATRINO', 0);
insert into SERVICIO_INMOBILIARIO (ID_SERVICIO_INMOBILIARIO, TIPO_SERVICIO_INMOBILIARIO, COSTO_SERVICIO_INMOBILIARIO) values (58, 'SENDEROS', 0);
COMMIT;
     
     
     